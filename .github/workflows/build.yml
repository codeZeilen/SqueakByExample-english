name: 📕 Make Book

on:
  push:
  schedule:
    - cron: "0 0 * * 1"  # every monday

# not yet implemented: https://github.community/t/how-to-set-and-access-a-workflow-variable/17335/6?u=linqlover
# ---
#env:
#  os: ubuntu-latest
#  fail-fast: false
#  smalltalks: "[Trunk, 5.3]"
#---

jobs:
  tests:
    name: 🐞 Internal tests [${{ matrix.smalltalk }}]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        smalltalk: [Trunk, 5.3]
    steps:
      - uses: actions/checkout@v2
      - uses: hpi-swa/setup-smalltalkCI@v1
        with:
          smalltalk-image: Squeak64-${{ matrix.smalltalk }}
      - name: Run SmalltalkSources tests
        run: smalltalkci -s Squeak64-${{ matrix.smalltalk }} SBE-Tests.smalltalk.ston
        timeout-minutes: 15
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # for coverage reports
  tex-assertions:
    name: 🧪 @TEST assertions [${{ matrix.smalltalk }}]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        smalltalk: [Trunk, 5.3]
    steps:
      - uses: actions/checkout@v2
      - uses: hpi-swa/setup-smalltalkCI@v1
        with:
          smalltalk-image: Squeak64-${{ matrix.smalltalk }}
      - name: Run TEX assertions
        run: smalltalkci -s Squeak64-${{ matrix.smalltalk }} SBE-Testing.smalltalk.ston
        timeout-minutes: 15
  listings:
    name: 📄 Collect listings from SmalltalkSources
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: make listings
      - name: 💾 Store listings
        uses: actions/upload-artifact@master
        with:
          name: listings
          path: ListingSources
  build:
    name: 📖 Build book [${{ matrix.smalltalk }}]
    needs: [listings]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        smalltalk: [Trunk, 5.3]
    steps:
      - uses: actions/checkout@v2
      - uses: hpi-swa/setup-smalltalkCI@v1
        with:
          smalltalk-image: Squeak64-${{ matrix.smalltalk }}
      - id: figures
        name: 🖼 Build Squeak figures
        run: smalltalkci -s Squeak64-${{ matrix.smalltalk }} SBE-Extract.smalltalk.ston
        timeout-minutes: 15
        continue-on-error: true
      - if: (steps.figures.outcome == 'failure')
        name: Configure DEBUG_FIGURES
        run: |
          echo ::warning::jobs.figures has failed, compiling PDF with missing figures
          echo "DEBUG_FIGURES=true" >> $GITHUB_ENV
      - name: Load listings
        uses: actions/download-artifact@master
        with:
          name: listings
          path: ListingSources
      - name: ⚙ Compile PDF
        uses: xu-cheng/texlive-action/full@v1
        with:
          run: |
            apk add make
            make book-pages
        env:
          SQUEAK_VERSION: ${{ matrix.smalltalk }}
          BASH_V5: true
      - name: Rename PDF
        run: mv SBE.pdf SBE-${{ matrix.smalltalk }}.pdf
        env:
          SQUEAK_VERSION: ${{ matrix.smalltalk }}
      - name: 💾 Store book
        uses: actions/upload-artifact@master
        with:
          name: book-${{ matrix.smalltalk }}
          path: SBE-${{ matrix.smalltalk }}.pdf
      - if: (steps.figures.outcome == 'failure')
        name: Check DEBUG_FIGURES
        run: |
          echo ::error::jobs.figures has failed, so the compiled PDF might miss some figures!
          echo "DEBUG_FIGURES=true" >> $GITHUB_ENV
          exit 1
  notify:
    name: 📣 Notify community on failure
    needs: [tests, tex-assertions, build]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: voxmedia/github-action-slack-notify-build@v1
        if: |
          github.event_name == 'schedule' && (
            needs.tests.result == 'failure'
            || needs.build.result == 'failure'
            || needs.tex-assertions.result == 'failure')
        with:
          channel: squeak
          status: FAILED
          color: danger
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}
